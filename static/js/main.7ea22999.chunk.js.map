{"version":3,"sources":["components/Card.js","components/ErrorBoundary.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAeeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,gBACzD,gCACE,6BAAKL,IACL,4BAAIC,WCaGK,E,kDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKL,MAAMO,a,GAhBMC,aCwBbC,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAGIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEElB,GAAIe,EAAOG,GAAGlB,GACdF,KAAMiB,EAAOG,GAAGpB,KAChBC,MAAOgB,EAAOG,GAAGnB,OAHZmB,SCIJC,G,KAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,8BACE,uBACEpB,GAAG,YACHqB,KAAK,SACLC,YAAY,gBACZrB,UAAU,mCACVsB,SAAUH,QCIHI,EAbA,SAAAnB,GACb,OACE,qBACEoB,MAAO,CACLC,UAAW,SACXC,OAAQ,QAHZ,SAMGtB,EAAMO,YCoDEgB,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAAAC,GACf,EAAKnB,SAAS,CAAEoB,YAAaD,EAAME,OAAOC,SAb1C,EAAK3B,MAAQ,CACXS,OAAQ,GACRgB,YAAa,IALH,E,gEASO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAK3B,SAAS,CAAEI,OAAQuB,S,+BASjC,IAAD,EACyB5B,KAAKJ,MAA7BS,EADD,EACCA,OAAQgB,EADT,EACSA,YAEVQ,EAAiBxB,EAAOyB,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAGvD,OAAQ3B,EAAO6B,OAGb,sBAAK3C,UAAU,KAAf,UACE,qBACEC,IAAI,6EACJ2C,MAAM,UAER,cAAC,EAAD,CAAWzB,aAAcV,KAAKmB,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUd,OAAQwB,WAVxB,gD,GA9BY1B,aCFHiC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,K","file":"static/js/main.7ea22999.chunk.js","sourcesContent":["import React from 'react'\r\nimport { robots } from '../robots'\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='funny robot' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops, an error occurred.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport { robots } from '../robots'\r\nimport ErrorBoundary from './ErrorBoundary'\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        //user = each item in the array, i = the index of the item\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n            />\r\n          )\r\n        })\r\n        //everything inside these {} curly braces is just javascript.\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport AppCSS from '../containers/App.css'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        id='searchbox'\r\n        type='search'\r\n        placeholder='search robots'\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        height: '80vh',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\nimport { render } from 'react-dom'\r\nimport CardList from '../components/CardList'\r\n// import { robots } from './robots'\r\nimport SearchBox from '../components/SearchBox'\r\nimport AppCSS from './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n//\r\n\r\n// STATE it's simply an object that describes the entire application. In this case it will be the value of the search box, and the robots.\r\n// STATE >> props\r\n// We need to change from using functions (const = blah blah) to using CLASSES\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    // these are the things that describe the app. They can change and can be dynamic.\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users') //grab the users from this link, convert to json, and make the STATE 'robots' = these users.\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }))\r\n  }\r\n\r\n  onSearchChange = event => {\r\n    this.setState({ searchfield: event.target.value })\r\n    //This gives us the value of what is actually being typed in the search box.\r\n    //event is the event, target is the search box element, value is the value of the search box!\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    return !robots.length ? (\r\n      <h1>Loading...</h1>\r\n    ) : (\r\n      <div className='tc'>\r\n        <img\r\n          src='https://fontmeme.com/permalink/201202/2b05458e27d8a5df9a4b631e27c77ef9.png'\r\n          width='400px'\r\n        />\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App' //grab the main app file\nimport { robots } from './robots' //grab all the robots from the robots file\nimport 'tachyons'\nimport reportWebVitals from './reportWebVitals'\n\n//Render the CardList\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}